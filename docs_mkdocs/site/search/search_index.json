{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Home"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"models/","text":"Models Roles Role : models.TextChoices (values: 'user' -> 'User', 'admin' -> 'Admin') Protocol Protocol : models.TextChoices (values: 'rdp' -> 'RDP', 'ssh' -> 'SSH', 'vnc' -> 'VNC') Question question_text : CharField (max_length=200) pub_date : DateTimeField (\"date published\") Choice question : ForeignKey (to Question , on_delete=models.CASCADE) choice_text : CharField (max_length=200) votes : IntegerField (default=0) Virtuals id : UUIDField (primary_key=True, default=uuid.uuid4, editable=False) hostname : CharField (max_length=32) protocol : CharField (max_length=5, choices=Protocol.choices) user_id : ForeignKey (to User , on_delete=models.CASCADE) address : CharField (max_length=128) port : IntegerField user_vm : CharField (max_length=64) password_vm : CharField (max_length=128) ignore_cert : BooleanField Audit_log id : UUIDField (primary_key=True, default=uuid.uuid4, editable=False) action : CharField (max_length=32) time : DateTimeField (auto_now_add=True) virtual_id : ForeignKey (to Virtuals , on_delete=models.CASCADE) user_id : ForeignKey (to User , on_delete=models.CASCADE)","title":"Models"},{"location":"models/#models","text":"","title":"Models"},{"location":"models/#roles","text":"Role : models.TextChoices (values: 'user' -> 'User', 'admin' -> 'Admin')","title":"Roles"},{"location":"models/#protocol","text":"Protocol : models.TextChoices (values: 'rdp' -> 'RDP', 'ssh' -> 'SSH', 'vnc' -> 'VNC')","title":"Protocol"},{"location":"models/#question","text":"question_text : CharField (max_length=200) pub_date : DateTimeField (\"date published\")","title":"Question"},{"location":"models/#choice","text":"question : ForeignKey (to Question , on_delete=models.CASCADE) choice_text : CharField (max_length=200) votes : IntegerField (default=0)","title":"Choice"},{"location":"models/#virtuals","text":"id : UUIDField (primary_key=True, default=uuid.uuid4, editable=False) hostname : CharField (max_length=32) protocol : CharField (max_length=5, choices=Protocol.choices) user_id : ForeignKey (to User , on_delete=models.CASCADE) address : CharField (max_length=128) port : IntegerField user_vm : CharField (max_length=64) password_vm : CharField (max_length=128) ignore_cert : BooleanField","title":"Virtuals"},{"location":"models/#audit_log","text":"id : UUIDField (primary_key=True, default=uuid.uuid4, editable=False) action : CharField (max_length=32) time : DateTimeField (auto_now_add=True) virtual_id : ForeignKey (to Virtuals , on_delete=models.CASCADE) user_id : ForeignKey (to User , on_delete=models.CASCADE)","title":"Audit_log"},{"location":"views/","text":"Views UserListView \u041a\u043b\u0430\u0441\u0441 : TemplateView \u0428\u0430\u0431\u043b\u043e\u043d : 'app/user_list.html' \u041c\u0435\u0442\u043e\u0434 : get_context_data \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 : \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442 \u0434\u043b\u044f \u0448\u0430\u0431\u043b\u043e\u043d\u0430, \u0432\u043a\u043b\u044e\u0447\u0430\u044f \u0437\u0430\u043f\u0438\u0441\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439 \u0438\u0437 \u0442\u0430\u0431\u043b\u0438\u0446\u044b \u0441 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u043c \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u043e\u043c. \u0414\u0435\u0439\u0441\u0442\u0432\u0438\u044f : \u0412\u044b\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u0441\u0443\u043f\u0435\u0440\u043a\u043b\u0430\u0441\u0441 \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0431\u0430\u0437\u043e\u0432\u043e\u0433\u043e \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u0430. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u044e get_users \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0438\u0441\u0435\u0439 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439. \u0412 \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0438\u0441\u0435\u0439, \u043e\u043d\u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u0432 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442. \u0412 \u0441\u043b\u0443\u0447\u0430\u0435 \u043e\u0448\u0438\u0431\u043a\u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u0443\u0441\u0442\u043e\u0439 \u0441\u043f\u0438\u0441\u043e\u043a. \u041a\u043e\u043d\u0442\u0435\u043a\u0441\u0442 \u0432\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u043a\u043b\u044e\u0447 'records' , \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0439 \u0437\u0430\u043f\u0438\u0441\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439. VirtualsListCreate \u041a\u043b\u0430\u0441\u0441 : generics.ListCreateAPIView QuerySet : Virtuals.objects.all() Serializer Class : ItemSerializer \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 : \u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0441\u043f\u0438\u0441\u043a\u0430 \u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u043c\u043e\u0434\u0435\u043b\u0438 Virtuals . VitualsRetrieveUpdateDestroy \u041a\u043b\u0430\u0441\u0441 : generics.RetrieveUpdateDestroyAPIView QuerySet : Virtuals.objects.all() Serializer Class : ItemSerializer \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 : \u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f, \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0445 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u043c\u043e\u0434\u0435\u043b\u0438 Virtuals .","title":"Views"},{"location":"views/#views","text":"","title":"Views"},{"location":"views/#userlistview","text":"\u041a\u043b\u0430\u0441\u0441 : TemplateView \u0428\u0430\u0431\u043b\u043e\u043d : 'app/user_list.html' \u041c\u0435\u0442\u043e\u0434 : get_context_data \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 : \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442 \u0434\u043b\u044f \u0448\u0430\u0431\u043b\u043e\u043d\u0430, \u0432\u043a\u043b\u044e\u0447\u0430\u044f \u0437\u0430\u043f\u0438\u0441\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439 \u0438\u0437 \u0442\u0430\u0431\u043b\u0438\u0446\u044b \u0441 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u043c \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u043e\u043c. \u0414\u0435\u0439\u0441\u0442\u0432\u0438\u044f : \u0412\u044b\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u0441\u0443\u043f\u0435\u0440\u043a\u043b\u0430\u0441\u0441 \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0431\u0430\u0437\u043e\u0432\u043e\u0433\u043e \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u0430. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u044e get_users \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0438\u0441\u0435\u0439 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439. \u0412 \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0438\u0441\u0435\u0439, \u043e\u043d\u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u0432 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442. \u0412 \u0441\u043b\u0443\u0447\u0430\u0435 \u043e\u0448\u0438\u0431\u043a\u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u0443\u0441\u0442\u043e\u0439 \u0441\u043f\u0438\u0441\u043e\u043a. \u041a\u043e\u043d\u0442\u0435\u043a\u0441\u0442 \u0432\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u043a\u043b\u044e\u0447 'records' , \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0439 \u0437\u0430\u043f\u0438\u0441\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439.","title":"UserListView"},{"location":"views/#virtualslistcreate","text":"\u041a\u043b\u0430\u0441\u0441 : generics.ListCreateAPIView QuerySet : Virtuals.objects.all() Serializer Class : ItemSerializer \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 : \u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0441\u043f\u0438\u0441\u043a\u0430 \u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u043c\u043e\u0434\u0435\u043b\u0438 Virtuals .","title":"VirtualsListCreate"},{"location":"views/#vitualsretrieveupdatedestroy","text":"\u041a\u043b\u0430\u0441\u0441 : generics.RetrieveUpdateDestroyAPIView QuerySet : Virtuals.objects.all() Serializer Class : ItemSerializer \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 : \u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f, \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0445 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u043c\u043e\u0434\u0435\u043b\u0438 Virtuals .","title":"VitualsRetrieveUpdateDestroy"}]}